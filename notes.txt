
 My name is Wilfred
 My name is Timoth
 My name is Getrude
 My name is Angela

CREATE TABLE flights (
    id SERIAL PRIMARY KEY,
    origin VARCHAR NOT NULL,
    destination VARCHAR NOT NULL,
    duration INTERGER NOT NULL
);

INSERT INTO flights(origin,destination,duration)VALUES('Germany','Paris',520);
INSERT INTO flights(origin,destination,duration)VALUES('Canada','Spain',500);
INSERT INTO flights(origin,destination,duration)VALUES('France','Italy',480);
INSERT INTO flights(origin,destination,duration)VALUES('Ukraine','Mexico',620);


CREATE TABLE passengers(
    id SERIAL PRIMARY KEY,
    name VARCHAR NOT NULL,
    flight_id INTEGER REFERENCES flights
);

INSERT INTO passengers(name,flight_id)VALUES('Jenn',1);
INSERT INTO passengers(name,flight_id)VALUES('Juliet',2);
INSERT INTO passengers(name,flight_id)VALUES('Romeo',2);
INSERT INTO passengers(name,flight_id)VALUES('Tom',1);
INSERT INTO passengers(name,flight_id)VALUES('Davis',3);
INSERT INTO passengers(name,flight_id)VALUES('Angela',4);
INSERT INTO passengers(name,flight_id)VALUES('Bob',3);
INSERT INTO passengers(name,flight_id)VALUES('Craig',5);
INSERT INTO passengers(name,flight_id)VALUES('Jenn',6);



INNER JOIN only retrieves the items that match.

postgres=# SELECT origin,destination,name FROM flights JOIN passengers ON passengers.flight_id = flights.id;
  origin  | destination |  name  
----------+-------------+--------
 New York | London      | Jenn
 Germany  | Paris       | Juliet
 Germany  | Paris       | Romeo
 New York | London      | Tom
 Ukraine  | Mexico      | Davis
 India    | Belarus     | Angela
 Ukraine  | Mexico      | Bob
 Nigeria  | Belgium     | Craig
 France   | Japan       | Jenn
(9 rows)

"postgresql://your_username:your_password@postgresql:5432/database_name" 
set DATABASE_URL=postgresql://user:1302@localhost/postgres

postgres://user@localhost:5432/flightdb


#CONNECTING AND RETRIEVING DATA FROM THE DATABASE USING SQLALCHEMY,PSYCOPG2

server: localhost
database: postgres
password:Admin123$
Port:5432
postgresql://postgres:Admin123$@localhost:5432/postgres 

from sqlalchemy import create_engine
import psycopg2
from sqlalchemy.orm import scoped_session,sessionmaker
import os

engine = create_engine(os.getenv("DATABASE_URL"))
db = scoped_session(sessionmaker(bind=engine))

def main():
    flights = db.execute("SELECT origin,destination,duration FROM flights")
    for flight in flights:
        print(f"{flight.origin} to {flight.destination},{flight.duration} minutes")

if __name__ == "__main__":
    main()



    

<!-- <ul class="list-group">
    {%for flight in flights%}

    <li class="list-group-item"> {{flight}} </li>

    {%endfor%}
</ul> -->








<!-- <table class="table table-striped" style="width:100%">
    <tr>
        <th>Origin</th>
        <th>Destination</th>
        <th>Duration</th>
    </tr>
    {%for flight in flights%}
    <tr>
        <td>{{flight.origin}}</td>
        <td>{{flight.destination}}</td>
        <td>{{flight.duration}}</td>
    </tr>
    {%endfor%} -->
<!-- </table> -->

JSON REPRESENTATION OF FLIGHT INFO

{
    "origin"{
        "city":"Tokyo",
        "code":"HND"
    },

    "destination"{
        "city":"Shanghai",
        "code":"PVG"
    },

    "duration":185,
    "passengers":["Alice","Bob"]
}

    HTTP METHODS
    GET: Retrieve resources
    POST: create a new resource
    PUT: replace a resource
    PATCH: update a resource
    DELETE: delete a resource